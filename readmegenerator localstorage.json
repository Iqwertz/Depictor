{
    "current-slug-list": "logo,title-and-description,features,demo,screenshots,installation,acknowledgement,license,tech,run-locally,deployment,support",
    "current-focused-slug": "run-locally",
    "readme-backup": "[{\"slug\":\"title-and-description\",\"name\":\"Title and Description\",\"markdown\":\"\\n# Depictor\\n\\nDepictor is a web app that runs on a Raspberry Pi. It provides a simple and clean web interface to easily generate and draw images on an 2d plotter.\\nIt features automatic background removal, custom gcode settings, print time estimates, gallery with previous prints and many more features.\\n\\n\"},{\"slug\":\"installation\",\"name\":\"Installation\",\"markdown\":\"\\n## Installation & Setup\\nI couldn't test this guide with a lot of people, so if something isn't clear or doesn't work, please create a new Issue or write an email to juliushussl@gmail.com.\\n\\n## Install\\n### Material\\n- Raspberry pi\\n- min. 4GB micro sd card\\n- plotter that works with grbl (other non grbl plotter should also work in theory if they support the standard gcode set)\\n- a cable to connect the plotter and rpi over usb\\n\\n### Quick install instructions:\\nIf you are already familiar with rpis these are the simplified quick install instructions:\\n- install a raspbian os light image on the rpi.\\n- ssh into the rpi.\\n- execute these three commands:\\n```bash\\n  wget https://raw.githubusercontent.com/Iqwertz/Depictor/main/install.sh\\n  sudo chmod +x install.sh\\n  sudo ./install.sh\\n```\\n- Connect the plotter with the rpi via USB.\\n- Open a browser and enter the ip of your rpi in the browser to access the web interface. If everything was successfull you now should see the depictor landing page! \\n- (Before you start your first drawing you should check out the 'Setup' section)\\n\\n### Detailed install instructions:\\n### Insalling raspbian\\nTo install raspbian on an sd card I recommend to use the Raspberry Pi imager. You can download it here: [www.raspberrypi.com/software/](https://www.raspberrypi.com/software/).\\nAfter installing raspberrypi imager and opening it up choose raspberry PI OS Lite (32-bit) as the os. Then select the correct sd-card and set the following settings (of course you have to change the username and password and set the correct wifi credentials):\\n[imager settings]\\n(The settings are in german and I cant find  way to change that but I think it is clear which settings should be used)\\nThen click on write and wait.\\n\\nAfter the imager finished the write process remove the micro-sd card and put it into the rpi. You successfully created an raspbian image!\\n\\n### Installing Depictor\\nTo install Depictor on your rpi you have to ssh into it. \\nTo do so open a terminal and type in _ssh pi@depictor_ (if you changed your username replace _pi_ with your username).\\nThere may be some warning... just accept it by typing _yes_ and then enter your password.\\nIf every thing was successfull the last line in the terminal should be: _pi@depictor:~ $_\\nNow paste these three commands: \\n```bash\\n  wget https://raw.githubusercontent.com/Iqwertz/Depictor/main/install.sh\\n  sudo chmod +x install.sh\\n  sudo ./install.sh\\n```\\n\\nThe install will take a few minutes. After it finished you successfully have installed Depictor! You can now access it by opening this url in the browser: [depictor.local](http://depictor.local/).\\n\\n## Setup\\nBefore you try to draw your first image, you propably have to adjust these three settings (all of them can be found in the settings tab in the top right):\\n\\n### Start gcode\\nIn this textfield you can paste some gcode that gets appended to the gcode file before drawing it. Before starting your first printer please adjust the feedrate (default 4000) and the homing command for your plotter. \\n\\n### Gcode scaling\\nThe maximum values of the generated gcode are X200, Y162. If you move your plotter to this point the pen should be at the boarder of the a4 paper you want to draw on. If this is not the case you have to adjust the scaling of the generated gcode: \\n\\nTo calculate the correct scaling for your plotter move your plotter to (0,0). Now place one corner of the A4 paper under the pen. Also the longer side of the paper should be along the x-axis.\\nNow move the y axis to the other corner of the A4 Paper. Note down the y coordinate of the new position. Then divide this value by 162. The result is the correct scaling. Enter it into the \\\"_Gcode scaling_\\\" field in the settings. \\n\\nWhen the pen is  if the drawen picture is not in the center of the paper you can shift the image by adjusting the \\\"_Gcode offset_\\\" setting.\\n\\n### Pen down command\\nAs the name says this is the command that is used to lower the pen during drawing. If this command is diffrent on your plotter plotter please change it here.\\n(Note: Currently the pen up command is always \\\"_M05_\\\"! I will add an option to change this in the future. If it is important to you please create an issue)\\n\\n## Supported Raspberry Pi models \\nThe project was developed and tested with an Raspberry Pi 3B but should work on every official model. However it is not recommended to use an Raspberry Pi zero due to its limited processing power (the image conversion will take 15+ min).\\n    \"},{\"slug\":\"logo\",\"name\":\"Logo\",\"markdown\":\"\\n![Logo](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/th5xamgrr6se0x5ro4g6.png)\\n\\n\"},{\"slug\":\"run-locally\",\"name\":\"Run Locally\",\"markdown\":\"\\n## Run Locally\\n\\nClone the project\\n\\n```bash\\n  git clone https://github.com/Iqwertz/Depictor.git\\n```\\n\\n### run backend\\nGo to the projects backend directory\\n\\n```bash\\n  cd Depictor/Backend\\n```\\n\\nInstall backend dependencies \\n\\n```bash\\n  npm i\\n```\\n\\nStart backend server:\\n\\n```bash\\n  npm run start\\n```\\n\\nor\\n\\n```bash\\n  nodemon\\n```\\n\\n### run frontend\\nGo to the projects frontend directory\\n\\n```bash\\n  cd Depictor/Frontend\\n```\\n\\nInstall frontend dependencies \\n\\n```bash\\n  npm i\\n```\\n\\nStart frontend live server:\\n\\n```bash\\n  ng serve\\n```\\n\\n\"},{\"slug\":\"screenshots\",\"name\":\"Screenshots\",\"markdown\":\"\\n## Screenshots\\n\\n![App Screenshot](https://via.placeholder.com/468x300?text=App+Screenshot+Here)\\n\\n\"},{\"slug\":\"env-variables\",\"name\":\"Environment Variables\",\"markdown\":\"\\n## Environment Variables\\n\\nTo run this project, you will need to add the following environment variables to your .env file\\n\\n`API_KEY`\\n\\n`ANOTHER_API_KEY`\\n\\n\"},{\"slug\":\"features\",\"name\":\"Features\",\"markdown\":\"\\n## Features\\n\\n- Modern and responsive web interface\\n- Image to gcode converter\\n- Automatic background removal\\n- Gallery with all previous drawings\\n- Live print progress view with time estimates\\n- One click updates\\n\\n\"},{\"slug\":\"usage-examples\",\"name\":\"Usage/Examples\",\"markdown\":\"\\n## Usage/Examples\\n\\n```javascript\\nimport Component from 'my-project'\\n\\nfunction App() {\\n  return <Component />\\n}\\n```\\n\\n\"},{\"slug\":\"api\",\"name\":\"API Reference\",\"markdown\":\"\\n## API Reference\\n\\n#### Get all items\\n\\n```http\\n  GET /api/items\\n```\\n\\n| Parameter | Type     | Description                |\\n| :-------- | :------- | :------------------------- |\\n| `api_key` | `string` | **Required**. Your API key |\\n\\n#### Get item\\n\\n```http\\n  GET /api/items/${id}\\n```\\n\\n| Parameter | Type     | Description                       |\\n| :-------- | :------- | :-------------------------------- |\\n| `id`      | `string` | **Required**. Id of item to fetch |\\n\\n#### add(num1, num2)\\n\\nTakes two numbers and returns the sum.\\n\\n\"},{\"slug\":\"contributing\",\"name\":\"Contributing\",\"markdown\":\"\\n## Contributing\\n\\nContributions are always welcome!\\n\\nSee `contributing.md` for ways to get started.\\n\\nPlease adhere to this project's `code of conduct`.\\n\\n\"},{\"slug\":\"tests\",\"name\":\"Running Tests\",\"markdown\":\"\\n## Running Tests\\n\\nTo run tests, run the following command\\n\\n```bash\\n  npm run test\\n```\\n\\n\"},{\"slug\":\"license\",\"name\":\"License\",\"markdown\":\"\\n## License\\n\\n[GPL-3.0 License](https://choosealicense.com/licenses/gpl-3.0/)\\n\\n\"},{\"slug\":\"badges\",\"name\":\"Badges\",\"markdown\":\"\\n## Badges\\n\\nAdd badges from somewhere like: [shields.io](https://shields.io/)\\n\\n[![MIT License](https://img.shields.io/apm/l/atomic-design-ui.svg?)](https://github.com/tterb/atomic-design-ui/blob/master/LICENSEs)\\n[![GPLv3 License](https://img.shields.io/badge/License-GPL%20v3-yellow.svg)](https://opensource.org/licenses/)\\n[![AGPL License](https://img.shields.io/badge/license-AGPL-blue.svg)](http://www.gnu.org/licenses/agpl-3.0)\\n\\n\"},{\"slug\":\"roadmap\",\"name\":\"Roadmap\",\"markdown\":\"\\n## Roadmap\\n\\n- Additional browser support\\n\\n- Add more integrations\\n\\n\"},{\"slug\":\"authors\",\"name\":\"Authors\",\"markdown\":\"\\n## Authors\\n\\n- [@katherinepeterson](https://www.github.com/octokatherine)\\n\\n\"},{\"slug\":\"acknowledgement\",\"name\":\"Acknowledgements\",\"markdown\":\"\\n## Acknowledgements\\n\\n - Huge thanks to [Scott-Cooper](https://github.com/Scott-Cooper), for creating the  [Drawbot_image_to_gcode_v2](https://github.com/Scott-Cooper/Drawbot_image_to_gcode_v2) which is used to convert the images to beautiful gcode.\\n - [gcode-cli](https://github.com/hzeller)\\n - [remove.bg](https://www.remove.bg/de)\\n\\n\"},{\"slug\":\"support\",\"name\":\"Support\",\"markdown\":\"\\n## Support\\n\\nFor support, email juliushussl@gmail.com .\\n\\n\"},{\"slug\":\"feedback\",\"name\":\"Feedback\",\"markdown\":\"\\n## Feedback\\n\\nIf you have any feedback, please reach out to us at fake@fake.com\\n\\n\"},{\"slug\":\"related\",\"name\":\"Related\",\"markdown\":\"\\n## Related\\n\\nHere are some related projects\\n\\n[Awesome README](https://github.com/matiassingers/awesome-readme)\\n\\n\"},{\"slug\":\"demo\",\"name\":\"Demo\",\"markdown\":\"\\n## Demo\\n\\nInsert gif or link to demo\\n\\n\"},{\"slug\":\"tech\",\"name\":\"Tech\",\"markdown\":\"\\n## Tech Stack\\n\\n**Client:** Angular, Scss\\n\\n**Server:** Node, Express, Java, c\\n\\n\"},{\"slug\":\"optimizations\",\"name\":\"Optimizations\",\"markdown\":\"\\n## Optimizations\\n\\nWhat optimizations did you make in your code? E.g. refactors, performance improvements, accessibility\\n\\n\"},{\"slug\":\"lessons\",\"name\":\"Lessons\",\"markdown\":\"\\n## Lessons Learned\\n\\nWhat did you learn while building this project? What challenges did you face and how did you overcome them?\\n\\n\"},{\"slug\":\"faq\",\"name\":\"FAQ\",\"markdown\":\"\\n## FAQ\\n\\n#### Question 1\\n\\nAnswer 1\\n\\n#### Question 2\\n\\nAnswer 2\\n\\n\"},{\"slug\":\"used-by\",\"name\":\"Used By\",\"markdown\":\"\\n## Used By\\n\\nThis project is used by the following companies:\\n\\n- Company 1\\n- Company 2\\n\\n\"},{\"slug\":\"documentation\",\"name\":\"Documentation\",\"markdown\":\"\\n## Documentation\\n\\n[Documentation](https://linktodocumentation)\\n\\n\"},{\"slug\":\"deployment\",\"name\":\"Deployment\",\"markdown\":\"\\n## Deployment\\n\\nTo generate a new release run\\n\\n```bash\\n  ./ generateRelease.sh\\n```\\n\\n\"},{\"slug\":\"appendix\",\"name\":\"Appendix\",\"markdown\":\"\\n## Appendix\\n\\nAny additional information goes here\\n\\n\"},{\"slug\":\"github-profile-intro\",\"name\":\"Github Profile - Introduction\",\"markdown\":\"\\n# Hi, I'm Katherine! 👋\\n\\n\"},{\"slug\":\"github-profile-about-me\",\"name\":\"Github Profile - About Me\",\"markdown\":\"\\n## 🚀 About Me\\nI'm a full stack developer...\\n\\n\"},{\"slug\":\"github-profile-skills\",\"name\":\"Github Profile - Skills\",\"markdown\":\"\\n## 🛠 Skills\\nJavascript, HTML, CSS...\\n\\n\"},{\"slug\":\"github-profile-links\",\"name\":\"Github Profile - Links\",\"markdown\":\"\\n## 🔗 Links\\n[![portfolio](https://img.shields.io/badge/my_portfolio-000?style=for-the-badge&logo=ko-fi&logoColor=white)](https://katherinempeterson.com/)\\n[![linkedin](https://img.shields.io/badge/linkedin-0A66C2?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/)\\n[![twitter](https://img.shields.io/badge/twitter-1DA1F2?style=for-the-badge&logo=twitter&logoColor=white)](https://twitter.com/)\\n\\n\"},{\"slug\":\"github-profile-other\",\"name\":\"Github Profile - Other\",\"markdown\":\"\\n## Other Common Github Profile Sections\\n👩‍💻 I'm currently working on...\\n\\n🧠 I'm currently learning...\\n\\n👯‍♀️ I'm looking to collaborate on...\\n\\n🤔 I'm looking for help with...\\n\\n💬 Ask me about...\\n\\n📫 How to reach me...\\n\\n😄 Pronouns...\\n\\n⚡️ Fun fact...\\n\\n\"},{\"slug\":\"colorreference\",\"name\":\"Color Reference\",\"markdown\":\"## Color Reference\\n\\n| Color             | Hex                                                                |\\n| ----------------- | ------------------------------------------------------------------ |\\n| Example Color | ![#0a192f](https://via.placeholder.com/10/0a192f?text=+) #0a192f |\\n| Example Color | ![#f8f8f8](https://via.placeholder.com/10/f8f8f8?text=+) #f8f8f8 |\\n| Example Color | ![#00b48a](https://via.placeholder.com/10/00b48a?text=+) #00b48a |\\n| Example Color | ![#00d1a0](https://via.placeholder.com/10/00b48a?text=+) #00d1a0 |\\n\\n\"}]",
    "color-theme": "dark",
    "friends_with_mate": "true"
}